openapi: 3.0.3
info:
  title: Circuit Provider API
  description: |
    Mobility Data Specification (MDS) 2.0 compliant Provider API for Circuit
    
    The Circuit Provider API enables Circuit to share real-time data about their vehicles, 
    trips, and events with city agencies for regulation and management of shared mobility services 
    in the public right-of-way.
    
    This API follows the Open Mobility Foundation (OMF) specification version 2.0.2.
  version: 2.0.2
  contact:
    name: Circuit Provider API Support
    email: support@circuit.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.circuit.com/mds/v2
    description: Production server
  - url: https://staging-api.circuit.com/mds/v2
    description: Staging server

security:
  - BearerAuth: []

paths:
  /vehicles:
    get:
      summary: Get vehicle status
      description: |
        Returns real-time status information about vehicles in the fleet.
        
        This endpoint provides current vehicle locations, states, battery levels, 
        and other operational data for vehicles that are available, reserved, 
        on trips, or otherwise deployed.
      tags:
        - Vehicles
      parameters:
        - name: bbox
          in: query
          description: Bounding box to filter vehicles (min_lon,min_lat,max_lon,max_lat)
          required: false
          schema:
            type: string
            pattern: '^-?\d+\.?\d*,-?\d+\.?\d*,-?\d+\.?\d*,-?\d+\.?\d*$'
            example: "-122.5,37.7,-122.3,37.8"
        - name: last_updated
          in: query
          description: Unix timestamp to filter vehicles updated since this time
          required: false
          schema:
            type: integer
            format: int64
            example: 1642694400000
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehiclesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /trips:
    get:
      summary: Get trip data
      description: |
        Returns historical trip data for the specified time range.
        
        Trip data includes route information, start/end locations, duration, 
        distance, and cost information for completed trips.
      tags:
        - Trips
      parameters:
        - name: start_time
          in: query
          description: Unix timestamp for start of time range (required)
          required: true
          schema:
            type: integer
            format: int64
            example: 1642694400000
        - name: end_time
          in: query
          description: Unix timestamp for end of time range
          required: false
          schema:
            type: integer
            format: int64
            example: 1642780800000
        - name: bbox
          in: query
          description: Bounding box to filter trips
          required: false
          schema:
            type: string
            pattern: '^-?\d+\.?\d*,-?\d+\.?\d*,-?\d+\.?\d*,-?\d+\.?\d*$'
            example: "-122.5,37.7,-122.3,37.8"
        - name: device_id
          in: query
          description: Filter trips by specific device ID
          required: false
          schema:
            type: string
            example: "vehicle_001"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /events:
    get:
      summary: Get vehicle events
      description: |
        Returns vehicle event data for the specified time range.
        
        Events include state changes, maintenance activities, rebalancing, 
        and other operational events that affect vehicle availability.
      tags:
        - Events
      parameters:
        - name: start_time
          in: query
          description: Unix timestamp for start of time range (required)
          required: true
          schema:
            type: integer
            format: int64
            example: 1642694400000
        - name: end_time
          in: query
          description: Unix timestamp for end of time range
          required: false
          schema:
            type: integer
            format: int64
            example: 1642780800000
        - name: bbox
          in: query
          description: Bounding box to filter events
          required: false
          schema:
            type: string
            pattern: '^-?\d+\.?\d*,-?\d+\.?\d*,-?\d+\.?\d*,-?\d+\.?\d*$'
            example: "-122.5,37.7,-122.3,37.8"
        - name: device_id
          in: query
          description: Filter events by specific device ID
          required: false
          schema:
            type: string
            example: "vehicle_001"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /reports:
    get:
      summary: Get provider reports
      description: |
        Returns aggregated provider reports for the specified date range.
        
        Reports include summary statistics, compliance metrics, and 
        operational performance data.
      tags:
        - Reports
      parameters:
        - name: start_date
          in: query
          description: Start date for reports (YYYY-MM-DD format, required)
          required: true
          schema:
            type: string
            format: date
            example: "2024-01-15"
        - name: end_date
          in: query
          description: End date for reports (YYYY-MM-DD format)
          required: false
          schema:
            type: string
            format: date
            example: "2024-01-16"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /status:
    get:
      summary: Get API status
      description: |
        Returns the operational status and health of the MDS Provider API.
        
        This endpoint provides information about available endpoints, 
        service areas, vehicle types, and system health.
      tags:
        - Status
      security: []  # Status endpoint is public
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: |
        Bearer token authentication. Include the token in the Authorization header:
        `Authorization: Bearer <token>`

  schemas:
    VehiclesResponse:
      type: object
      required:
        - version
        - data
        - last_updated
        - ttl
      properties:
        version:
          type: string
          example: "2.0.2"
        data:
          type: object
          properties:
            vehicles:
              type: array
              items:
                $ref: '#/components/schemas/Vehicle'
        last_updated:
          type: integer
          format: int64
          description: Unix timestamp in milliseconds
        ttl:
          type: integer
          description: Time to live in seconds

    TripsResponse:
      type: object
      required:
        - version
        - data
        - last_updated
        - ttl
      properties:
        version:
          type: string
          example: "2.0.2"
        data:
          type: object
          properties:
            trips:
              type: array
              items:
                $ref: '#/components/schemas/Trip'
        last_updated:
          type: integer
          format: int64
        ttl:
          type: integer

    EventsResponse:
      type: object
      required:
        - version
        - data
        - last_updated
        - ttl
      properties:
        version:
          type: string
          example: "2.0.2"
        data:
          type: object
          properties:
            events:
              type: array
              items:
                $ref: '#/components/schemas/Event'
        last_updated:
          type: integer
          format: int64
        ttl:
          type: integer

    ReportsResponse:
      type: object
      required:
        - version
        - data
        - last_updated
        - ttl
      properties:
        version:
          type: string
          example: "2.0.2"
        data:
          type: object
          properties:
            reports:
              type: array
              items:
                $ref: '#/components/schemas/Report'
        last_updated:
          type: integer
          format: int64
        ttl:
          type: integer

    StatusResponse:
      type: object
      required:
        - version
        - data
        - last_updated
        - ttl
      properties:
        version:
          type: string
          example: "2.0.2"
        data:
          type: object
          properties:
            status:
              $ref: '#/components/schemas/Status'
        last_updated:
          type: integer
          format: int64
        ttl:
          type: integer

    Vehicle:
      type: object
      required:
        - device_id
        - provider_id
        - vehicle_id
        - vehicle_type
        - vehicle_state
        - last_event_time
        - current_location
      properties:
        device_id:
          type: string
          description: Unique device identifier
        provider_id:
          type: string
          format: uuid
          description: Provider UUID
        data_provider_id:
          type: string
          format: uuid
          description: Data provider UUID
        vehicle_id:
          type: string
          description: Human-readable vehicle identifier
        vehicle_type:
          type: string
          enum: [bicycle, scooter, car, moped, other]
        propulsion_types:
          type: array
          items:
            type: string
            enum: [human, electric, combustion, hybrid, plug_in_hybrid, hydrogen_fuel_cell]
        vehicle_attributes:
          type: object
          properties:
            accessible:
              type: boolean
        vehicle_state:
          type: string
          enum: [available, reserved, on_trip, maintenance, removed, elsewhere, disabled]
        last_event_types:
          type: array
          items:
            type: string
        last_event_time:
          type: integer
          format: int64
        last_event_location:
          $ref: '#/components/schemas/GeoJSONPoint'
        current_location:
          $ref: '#/components/schemas/GeoJSONPoint'
        battery_percent:
          type: integer
          minimum: 0
          maximum: 100
        rental_uris:
          type: object
          properties:
            android:
              type: string
              format: uri
            ios:
              type: string
              format: uri
            web:
              type: string
              format: uri

    Trip:
      type: object
      required:
        - provider_id
        - device_id
        - trip_id
        - trip_duration
        - trip_distance
        - start_time
        - end_time
        - start_location
        - end_location
      properties:
        provider_id:
          type: string
          format: uuid
        data_provider_id:
          type: string
          format: uuid
        device_id:
          type: string
        trip_id:
          type: string
          format: uuid
        trip_duration:
          type: integer
          description: Duration in seconds
        trip_distance:
          type: integer
          description: Distance in meters
        route:
          $ref: '#/components/schemas/GeoJSONLineString'
        accuracy:
          type: integer
          description: GPS accuracy in meters
        start_time:
          type: integer
          format: int64
        end_time:
          type: integer
          format: int64
        publication_time:
          type: integer
          format: int64
        start_location:
          $ref: '#/components/schemas/GeoJSONPoint'
        end_location:
          $ref: '#/components/schemas/GeoJSONPoint'
        parking_verification_url:
          type: string
          format: uri
        standard_cost:
          type: integer
          description: Cost in cents
        actual_cost:
          type: integer
          description: Cost in cents
        currency:
          type: string
          example: "USD"

    Event:
      type: object
      required:
        - provider_id
        - device_id
        - event_types
        - event_time
        - event_location
      properties:
        provider_id:
          type: string
          format: uuid
        data_provider_id:
          type: string
          format: uuid
        device_id:
          type: string
        event_types:
          type: array
          items:
            type: string
        event_time:
          type: integer
          format: int64
        event_location:
          $ref: '#/components/schemas/GeoJSONPoint'
        battery_percent:
          type: integer
          minimum: 0
          maximum: 100
        associated_trip:
          type: string
          format: uuid

    Report:
      type: object
      properties:
        report_id:
          type: string
        report_type:
          type: string
        report_date:
          type: string
          format: date
        metrics:
          type: object

    Status:
      type: object
      required:
        - provider_id
        - provider_name
        - mds_version
        - available_modes
        - endpoints
      properties:
        provider_id:
          type: string
          format: uuid
        provider_name:
          type: string
        mds_version:
          type: string
        available_modes:
          type: array
          items:
            type: string
            enum: [micromobility, car_share, passenger_services, delivery_robots]
        endpoints:
          type: object
          properties:
            vehicles:
              $ref: '#/components/schemas/EndpointStatus'
            trips:
              $ref: '#/components/schemas/EndpointStatus'
            events:
              $ref: '#/components/schemas/EndpointStatus'
            reports:
              $ref: '#/components/schemas/EndpointStatus'
        service_areas:
          type: array
          items:
            $ref: '#/components/schemas/ServiceArea'
        vehicle_types:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VehicleTypeInfo'

    EndpointStatus:
      type: object
      properties:
        available:
          type: boolean
        last_updated:
          type: integer
          format: int64

    ServiceArea:
      type: object
      properties:
        service_area_id:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        geojson:
          type: object

    VehicleTypeInfo:
      type: object
      properties:
        count:
          type: integer
        propulsion_types:
          type: array
          items:
            type: string

    GeoJSONPoint:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum: [Point]
        coordinates:
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2

    GeoJSONLineString:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum: [LineString]
        coordinates:
          type: array
          items:
            type: array
            items:
              type: number
            minItems: 2
            maxItems: 2

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string

  responses:
    BadRequest:
      description: Bad request - invalid parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: Vehicles
    description: Real-time vehicle status and location data
  - name: Trips
    description: Historical trip data and analytics
  - name: Events
    description: Vehicle state changes and operational events
  - name: Reports
    description: Aggregated provider reports and metrics
  - name: Status
    description: API health and operational status